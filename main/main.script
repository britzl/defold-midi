local function initialize_midi()
	print("initialize_midi")
	local out_count = midi.count_out()
	local in_count = midi.count_in()
	print("out#", out_count)
	print("in#", in_count)

	if in_count > 0 then
		midi.open_in(0, "foo");
		print("In open:", midi.is_in_open())
		print("Out open:", midi.is_out_open())

		print(midi.get_name_in(0))
	else
		print("No input devices")
	end
end

function init(self)
	midi.set_listener(function(self, message)
		if message.event == midi.EVENT_MESSAGE then
			print("MESSAGE")
			pprint(message.data)
		elseif message.event == midi.EVENT_ERROR then
			print("ERROR " .. message.error)
		elseif message.event == midi.EVENT_READY then
			initialize_midi()
		end
	end)
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
end

function fixed_update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
